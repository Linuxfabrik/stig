- block:

  - name: 'Check if bootloader password is set'
    ansible.builtin.assert:
      that:
        - 'stig__grub2_password is defined'
        - 'stig__grub2_password | length'
      quiet: true
      fail_msg: 'Please define a bootloader password for your host ("stig__grub2_password").'


- block:

  - name: 'Check if we have booted in (U)EFI mode'
    ansible.builtin.set_fact:
      booted_in_efi_mode: '{{ ansible_facts["mounts"] | selectattr("mount", "equalto", "/boot/efi") | list | length }}'

  - ansible.builtin.set_fact:
      booted_in_bios_mode: '{{ not booted_in_efi_mode }}'

  - ansible.builtin.debug:
      msg:
        - 'Booted in (U)EFI Mode: "{{ booted_in_efi_mode }}"'
        - 'Booted in BIOS Mode: "{{ booted_in_bios_mode }}"'


- block:

  - name: 'Check if IPv6 is enabled'
    ansible.builtin.slurp:
      src: '/sys/module/ipv6/parameters/disable'
    register: 'ipv6_disabled'
    changed_when: false

  - ansible.builtin.set_fact:
      ipv6_disabled: '{{ ipv6_disabled | bool }}'

  - ansible.builtin.set_fact:
      ipv6_enabled: '{{ not ipv6_disabled }}'

  - ansible.builtin.debug:
      msg:
        - 'IPv6 disabled: "{{ ipv6_disabled }}"'
        - 'IPv6 enabled: "{{ ipv6_enabled }}"'

  rescue:

    - ansible.builtin.set_fact:
        ipv6_disabled: true
        ipv6_enabled: false


- block:

  - name: 'Populate all service facts (to be sure)'
    ansible.builtin.service_facts: # yamllint disable-line rule:empty-values

  - ansible.builtin.debug:
      msg:
        - 'Service Facts:'
        - '{{ ansible_facts["services"] }}'


- block:

  - name: 'Create /root/.ansible/tmp with a mode of 0700 for module remote_tmp manually'
    ansible.builtin.file:
      path: '/root/.ansible/tmp  '
      state: 'directory'
      mode: '0700'


- block:

  - name: 'Apply one STIG profile at a time'
    ansible.builtin.include_tasks: 'main-stig.yml'
    loop: '{{ stig }}'
    loop_control:
      loop_var: 's'

    tags:
      - 'remediation'
